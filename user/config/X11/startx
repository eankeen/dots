#!/usr/bin/env sh

unset DBUS_SESSION_BUS_ADDRESS
unset SESSION_MANAGER

# automatically determine an unused $DISPLAY
display=0
while true; do
	[ -e "/tmp/.X$display-lock" -o -S "/tmp/.X11-unix/X$display" ] || break
	display=$(($display + 1))
done
display=":$display"

# when starting the default server, start X on current tty to avoid the startx
# session being seen as inactive: https://bugzilla.redhat.com/show_bug.cgi?id=806491
tty="$(tty)"
if expr "$tty" : '/dev/tty[0-9][0-9]*$' >/dev/null; then
	ttyNum="$(echo "$tty" | grep -oE '[0-9]+$')"
	vtarg="vt$ttyNum"
	unset -v ttyNum
else
	echo "Warning: Not running on a tty"
fi


# set up default Xauth info for this machine
# check for GNU hostname
if hostname --version > /dev/null 2>&1; then
	if [ -z "$(hostname --version 2>&1 | grep GNU)" ]; then
		hostname=`hostname -f`
	fi
fi
[ -z "$hostname" ] && hostname=`hostname`


authdisplay=${display:-:0}
mcookie="$(/usr/bin/mcookie)"
[ -z "$mcookie" ] && {
	echo "Error: Couldn't create cookie"
	exit 1
}

# create a file with auth information for the server. ':0' is a dummy.
dummy=0
xserverauthfile="$(mktemp --tmpdir serverauth.XXXXXXXXXX)"
trap "rm -f '$xserverauthfile'" HUP INT QUIT ILL TRAP KILL BUS TERM
xauth -q -f "$xserverauthfile" <<- EOF
	add :$dummy . $mcookie
EOF
# now add the same credentials to the client authority file
# if '$displayname' already exists do not overwrite it as another
# server may need it. Add them to the '$xserverauthfile' instead
removelist=
for displayname in $authdisplay $hostname$authdisplay; do
	authcookie="$(xauth list "$displayname" \
		| sed -n "s/.*$displayname[[:space:]*].*[[:space:]*]//p")" 2>/dev/null;
	if [ "$authcookie" = "" ]; then
		xauth -q <<- EOF
			add $displayname . $mcookie
		EOF
		removelist="$displayname $removelist"
	else
		dummy=$(($dummy+1));
		xauth -q -f "$xserverauthfile" <<- EOF
			add :$dummy . $authcookie
		EOF
	fi
done

export XAUTHORITY="$HOME/.Xauthority"

xinit "$XDG_CONFIG_HOME/X11/xinitrc" -- "/usr/bin/Xorg" "$display" -nolisten tcp "$vtarg" -keeptty -auth "$xserverauthfile"
retval=$?

[ -n "$removelist" ] && xauth remove $removelist
[ -n "$xserverauthfile" ] && rm -f "$xserverauthfile"

command -v deallocvt >/dev/null 2>&1 && {
    deallocvt
}

exit $retval
