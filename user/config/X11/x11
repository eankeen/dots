#!/bin/sh
#
# x11
#

# prevent several independent sessions by same user
unset DBUS_SESSION_BUS_ADDRESS SESSION_MANAGER

# determine an unused $DISPLAY
display=0
while true; do
    [ -e "/tmp/.X$display-lock" -o -S "/tmp/.X11-unix/X$display" ] || break
    display=$(($display + 1))
done
display=":$display"

# start X on the current tty to avoid startx session being
# seen as inactive: https://bugzilla.redhat.com/show_bug.cgi?id=806491
tty="$(tty)"
if expr "$tty" : '/dev/tty[0-9][0-9]*$' >/dev/null; then
	ttyNum="$(echo "$tty" | grep -oE '[0-9]+$')"
	vtarg="vt$ttyNum"
	unset ttyNum
fi

# create a file with auth information for the server. ':0' is a dummy.
xserverauthfile="$(mktemp --tmpdir serverauth.XXXXXXXXXX)"
mcookie="$(/usr/bin/mcookie)"
dummy=0
echo "add :$dummy . $mcookie" | xauth -q -f "$xserverauthfile"
trap "rm -f '$xserverauthfile'" HUP INT QUIT ILL TRAP KILL BUS TERM

# now add the same credentials to the client authority file
# if '$displayname' already exists do not overwrite it as another
# server may need it.  add them to the '$xserverauthfile' instead
removelist=
for displayname in $display $(hostname)$display; do
	authcookie="$(xauth list "$displayname" \
		| sed -n "s/.*$displayname[[:space:]*].*[[:space:]*]//p")" 2>/dev/null;
	if [ "$authcookie" = "" ]; then
		echo "add $displayname . $mcookie" | xauth -q
		removelist="$displayname $removelist"
        else
		dummy=$(($dummy+1));
		echo "add :$dummy . $authcookie" | xauth -q -f "$xserverauthfile"
        fi
done

echo "$xserverauthfile"
: ${vtarg:?"vtarg is empty"}

xinit "$HOME/config/X11/min" -- /usr/bin/Xorg "$display" -nolisten tcp "$vtarg" -keeptty -auth "$xserverauthfile"
ret=$?

# cleanup
[ "$removelist" != "" ] && xauth remove "$removelist"
[ "$xserverauthfile" != "" ] && rm -f "$xserverauthfile"
command -v deallocvt && deallocvt > /dev/null 2>&1

exit $ret
