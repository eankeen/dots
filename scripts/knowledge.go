///bin/true; exec /usr/bin/env go run "$0" "$@"

// TODO: this script will eventually get bigger and will need
// it's own repo

package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"log"
	"os"
	"path"
	"path/filepath"
	"strings"
)

func main() {
	homeDir := os.Getenv("HOME")
	if homeDir == "" {
		log.Fatalln("HOME not set or empty")
	}

	dir := path.Join(homeDir, "docs", "knowledge-technical", "Web", "CSS")
	contents, err := ioutil.ReadDir(dir)
	if err != nil {
		log.Fatalf("error reading directory %s", dir)
	}

	fmt.Printf("Compiling link from %d files\n", len(contents))

	buf := bytes.Buffer{}
	buf.WriteString("# W3C CSS Modules\n")
	buf.WriteString("A linking note for CSS Modules. This file is autogenerated. Do not edit.\n")
	for _, file := range contents {
		name := strings.TrimSuffix(file.Name(), filepath.Ext(file.Name()))

		if !strings.HasPrefix(name, "CSS ") {
			continue
		}

		buf.WriteString("## [[ ")
		buf.WriteString(name)
		buf.WriteString(" ]] \n")
	}
	result := buf.String()
	fmt.Print(result)

	file2 := path.Join(homeDir, "docs", "knowledge-technical", "Web", "CSS", "W3C CSS Modules.md")

	// TODO: Writer
	err = ioutil.WriteFile(file2, buf.Bytes(), 0644)
	if err != nil {
		panic(err)
	}
}
